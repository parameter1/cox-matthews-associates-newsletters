import { get, getAsArray } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import queryFragment from "@cox-matthews-associates/package-common/graphql/fragments/content-list";

$ const { sectionName, date, newsletter } = input;

$ const withImage = defaultValue(input.withImage, false);
$ const imagePosition = defaultValue(input.imagePosition, 'right');
$ const withHeader = defaultValue(input.withHeader, false);
$ const withSection = defaultValue(input.withSection, true);
$ const voteNow = defaultValue(input.voteNow, false);
$ const readMore = defaultValue(input.readMore, false);
$ const urlParams = defaultValue(input.urlParams, false);
$ const withTeaser = defaultValue(input.withTeaser, true);
$ const withLogo = defaultValue(input.withLogo, true);
$ const forDailySend = defaultValue(input.forDailySend, false);
$ const isDailySend = defaultValue(input.isDailySend, false);
$ const forTwoDaySend = defaultValue(input.forTwoDaySend, false);
$ const isTwoDaySend = defaultValue(input.isTwoDaySend, false);
$ const withSubheader = defaultValue(input.withSubheader, false);
$ const adParams = input.adParams;
$ const weekday = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

$ const queryParams = {
  date: date.valueOf(),
  newsletterId: newsletter.id,
  sectionName,
  limit: input.limit,
  skip: input.skip,
  queryFragment,
};

<marko-web-query|{ nodes }| name="newsletter-scheduled-content" collapsible=false params=queryParams>
  <if(nodes.length)>
    <if(withHeader)>
      <common-list-header-element title=sectionName />
    </if>
    <if(forDailySend)>
      $ const dayOfWeek = new Date(date).getDay();
      $ const yesterdayOfWeek = dayOfWeek === 1 ? 5 : dayOfWeek - 1;
      $ const sectionNameWithDate = sectionName.match(/most read article on e-newsletter/i) ? `Most read article in ${weekday[yesterdayOfWeek]}'s newsletter` : sectionName
      <common-list-subheader-element title=sectionNameWithDate />
    </if>
    <if(isDailySend)>
      $ const dayOfWeek = new Date(date).getDay();
      $ const yesterdayOfWeek = dayOfWeek === 1 ? 5 : dayOfWeek - 1;
      $ const sectionNameWithDate = sectionName.match(/most read article from the website/i) ? `Most read article from the website on ${weekday[yesterdayOfWeek]}` : sectionName
      <common-list-subheader-element title=sectionNameWithDate />
    </if>
    <if(forTwoDaySend)>
      $ const dayOfWeek = new Date(date).getDay();
      $ const yesterdayOfWeek = dayOfWeek === 1 ? 3 : dayOfWeek - 2;
      $ const sectionNameWithDate = sectionName.match(/most read article on e-newsletter/i) ? `Most read article in ${weekday[yesterdayOfWeek]}'s newsletter` : sectionName
      <common-list-subheader-element title=sectionNameWithDate />
    </if>
    <if(isTwoDaySend)>
      $ const dayOfWeek = new Date(date).getDay();
      $ const yesterdayOfWeek = dayOfWeek === 1 ? 3 : dayOfWeek - 2;
      $ const sectionNameWithDate = sectionName.match(/most read article from the website/i) ? `Most read article from the website on ${weekday[yesterdayOfWeek]}` : sectionName
      <common-list-subheader-element title=sectionNameWithDate />
    </if>
    <if(withSubheader)>
      <common-list-subheader-element title=sectionName />
    </if>
    <for|content| of=nodes>
      <common-content-list-item-block
        content=content
        with-section=withSection
        with-image=withImage
        image-position=imagePosition
        vote-now=voteNow
        url-params=urlParams
        with-teaser=withTeaser
        section-name=sectionName
        read-more=readMore
        with-logo=withLogo
      />
    </for>
  </if>
</marko-web-query>
